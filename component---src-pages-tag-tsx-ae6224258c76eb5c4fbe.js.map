{"version":3,"file":"component---src-pages-tag-tsx-ae6224258c76eb5c4fbe.js","mappings":"mKAWe,SAASA,EAAS,GAAwC,IAAtCC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KACvD,OACEC,EAAAA,EAAAA,IAACC,EAAI,CAACC,GAAIH,IACRC,EAAAA,EAAAA,IAAAA,IAAAA,KAAIJ,IACJI,EAAAA,EAAAA,IAAAA,IAAAA,KACGF,EAAK,MAAID,GAIlB,CAEA,IAAMI,GAAOE,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,qBAAXD,CAAY,uO,oICXV,SAASE,EAAQ,GAAiB,IAAfC,EAAG,EAAHA,IAC1BC,GAAOC,EAAAA,EAAAA,IAAc,aAsBrBC,GAAWC,EAAAA,EAAAA,UACf,kBACEH,aAAI,EAAJA,EAAMI,kBAAkBC,MAAMC,QAAO,SAAAC,GAAE,OACrCA,EAAGC,KAAKC,YAAYC,KAAKC,SAASZ,EAAI,GACvC,GACH,CAACC,IAGH,OACEP,EAAAA,EAAAA,IAACC,EAAI,MACHD,EAAAA,EAAAA,IAACI,EAAAA,GAAI,CAACe,UAAU,OAAOjB,GAAI,KAAK,WAGhCF,EAAAA,EAAAA,IAAAA,MAAAA,CAAKmB,UAAU,SAAQ,IACnBb,EAAI,KAAGG,EAASW,OAAO,KAE1BX,EAASW,QACRpB,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KACGS,EAASY,KACR,oBACEN,KACYO,EAAI,EAAdC,OAAUD,KAAI,IACdN,YAAepB,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAI,OAGrCE,EAAAA,EAAAA,IAACL,EAAAA,EAAQ,CACP6B,IAAK5B,EACLA,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,KAAMuB,GACN,MAKRtB,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,IAAEM,EAAI,oBAIjB,CAEA,IAAML,GAAI,wRCxEK,SAASwB,IAAM,MACtBnB,EAA0C,QAAvC,EAAG,IAAIoB,gBAAgBC,SAASC,eAAO,aAApCC,EAAsCC,IAAI,OAEtD,OACE9B,EAAAA,EAAAA,IAAC+B,EAAAA,EAAM,MACL/B,EAAAA,EAAAA,IAACK,EAAO,CAACC,IAAKA,IAGpB,C","sources":["webpack://solog/./src/common/PostItem.tsx","webpack://solog/./src/components/tag/TagList.tsx","webpack://solog/./src/pages/tag.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype Props = {\n  title: string;\n  summary: string;\n  date: string;\n  link: string;\n};\n\nexport default function PostItem({ title, summary, date, link }: Props) {\n  return (\n    <Base to={link}>\n      <p>{title}</p>\n      <p>\n        {date} - {summary}\n      </p>\n    </Base>\n  );\n}\n\nconst Base = styled(Link)`\n  width: 100%;\n  margin-top: 30px;\n  > p:first-child {\n    font-size: 24px;\n    font-weight: 600;\n    @media (max-width: 500px) {\n      font-size: 20px;\n    }\n  }\n  > p:last-child {\n    font-size: 14px;\n    font-weight: 400;\n    @media (max-width: 500px) {\n      font-size: 12px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport React, { useMemo } from \"react\";\nimport PostItem from \"../../common/PostItem\";\nimport { Data } from \"../index/List\";\n\ntype Props = {\n  tag: string;\n};\n\nexport default function TagList({ tag }: Props) {\n  const data = useStaticQuery<Data>(graphql`\n    query postsQuery {\n      allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              category\n              date(formatString: \"YYYY년 MM월 DD일\")\n              emoji\n              title\n              summary\n              tags\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const postList = useMemo(\n    () =>\n      data?.allMarkdownRemark.edges.filter(el =>\n        el.node.frontmatter.tags.includes(tag),\n      ),\n    [data],\n  );\n\n  return (\n    <Base>\n      <Link className=\"link\" to={\"/\"}>\n        ← 모든 글\n      </Link>\n      <div className=\"title\">\n        #{tag} ({postList.length})\n      </div>\n      {postList.length ? (\n        <>\n          {postList.map(\n            ({\n              node: {\n                fields: { slug },\n                frontmatter: { title, summary, date },\n              },\n            }) => (\n              <PostItem\n                key={title}\n                title={title}\n                summary={summary}\n                date={date}\n                link={slug}\n              />\n            ),\n          )}\n        </>\n      ) : (\n        <p> {tag} 에 해당하는 글이 없습니다.</p>\n      )}\n    </Base>\n  );\n}\n\nconst Base = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 800px;\n  margin-top: 80px;\n  .link {\n    font-size: 14px;\n  }\n  .title {\n    font-size: 30px;\n    font-weight: 600;\n    margin-top: 20px;\n    @media (max-width: 500px) {\n      font-size: 24px;\n    }\n  }\n  > p {\n    margin-top: 30px;\n  }\n`;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport TagList from \"../components/tag/TagList\";\n\nexport default function Tag() {\n  const tag = new URLSearchParams(location.search)?.get(\"tag\");\n\n  return (\n    <Layout>\n      <TagList tag={tag} />\n    </Layout>\n  );\n}\n"],"names":["PostItem","title","summary","date","link","___EmotionJSX","Base","to","_styled","Link","TagList","tag","data","useStaticQuery","postList","useMemo","allMarkdownRemark","edges","filter","el","node","frontmatter","tags","includes","className","length","map","slug","fields","key","Tag","URLSearchParams","location","search","_URLSearchParams","get","Layout"],"sourceRoot":""}