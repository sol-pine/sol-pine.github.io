{"version":3,"file":"component---src-pages-index-tsx-13d100053cd12842fe4d.js","mappings":"wKAGe,SAASA,IACtB,OACEC,EAAAA,EAAAA,IAACC,EAAI,KAAC,eACO,mBAAM,aAIvB,CAEA,IAAMA,GAAI,kJ,oBCZGC,EAAW,CAAC,MAAO,QAAS,UAAW,UCWrC,SAASC,EAAS,GAAwC,IAAtCC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KACvD,OACEP,EAAAA,EAAAA,IAACC,EAAI,CAACO,GAAID,IACRP,EAAAA,EAAAA,IAAAA,IAAAA,KAAII,IACJJ,EAAAA,EAAAA,IAAAA,IAAAA,KACGM,EAAK,MAAID,GAIlB,CAEA,IAAMJ,GAAOQ,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,qBAAXD,CAAY,wOCIV,SAASE,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,OAA1CC,EAAY,KAAEC,EAAe,KAE9BC,GAAOC,EAAAA,EAAAA,IAAc,cAoBrBC,GAAWC,EAAAA,EAAAA,UACf,iBACmB,QAAjBL,EACIE,aAAI,EAAJA,EAAMI,kBAAkBC,MACxBL,aAAI,EAAJA,EAAMI,kBAAkBC,MAAMC,QAC5B,SAAAC,GAAE,OAAIA,EAAGC,KAAKC,YAAYC,WAAaZ,CAAY,GACpD,GACP,CAACE,EAAMF,IAGT,OACEb,EAAAA,EAAAA,IAACC,EAAI,MACHD,EAAAA,EAAAA,IAAC0B,EAAQ,KACNxB,EAASyB,KAAI,SAAAC,GAAI,OAChB5B,EAAAA,EAAAA,IAAAA,SAAAA,CACE6B,IAAKD,EACLE,MAAOF,EACPG,QAAS,SAAAC,GAAC,OAtCG,SAAAA,GAAC,OAAIlB,EAAgBkB,EAAEC,OAAOH,MAAO,CAsCpCI,CAAeF,EAAE,EAC/BG,UAAWtB,IAAiBe,EAAO,WAAa,IAE/CA,EACM,KAGZX,EAASmB,QACRpC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KACGiB,EAASU,KACR,oBACEJ,KACYc,EAAI,EAAdC,OAAUD,KAAI,IACdb,YAAepB,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAI,OAGrCN,EAAAA,EAAAA,IAACG,EAAQ,CACP0B,IAAKzB,EACLA,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,KAAM8B,GACN,MAKRrC,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,IAAEa,EAAa,oBAI1B,CAEA,IAAMZ,GAAI,kKAWJyB,GAAQ,0N,UCzGC,SAASa,IACtB,OACEvC,EAAAA,EAAAA,IAACwC,EAAAA,EAAM,MACLxC,EAAAA,EAAAA,IAACD,EAAK,OACNC,EAAAA,EAAAA,IAACW,EAAI,MAGX,C","sources":["webpack://solog/./src/components/index/Intro.tsx","webpack://solog/./src/constants.ts","webpack://solog/./src/components/index/PostItem.tsx","webpack://solog/./src/components/index/List.tsx","webpack://solog/./src/pages/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function Intro() {\n  return (\n    <Base>\n      Í∏∞Î°ùÌïòÎäî ÏäµÍ¥Ä ‚úçÔ∏è <br />\n      üí´ ÌôïÏû•ÎêòÎäî Í≤ΩÌóò\n    </Base>\n  );\n}\n\nconst Base = styled.div`\n  width: 100%;\n  font-size: 30px;\n  font-weight: 600;\n  @media (max-width: 500px) {\n    font-size: 24px;\n  }\n`;\n","export const CATEGORY = [\"all\", \"study\", \"project\", \"review\"];\n","import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype Props = {\n  title: string;\n  summary: string;\n  date: string;\n  link: string;\n};\n\nexport default function PostItem({ title, summary, date, link }: Props) {\n  return (\n    <Base to={link}>\n      <p>{title}</p>\n      <p>\n        {date} - {summary}\n      </p>\n    </Base>\n  );\n}\n\nconst Base = styled(Link)`\n  width: 100%;\n  margin-top: 30px;\n  > p:first-child {\n    font-size: 24px;\n    font-weight: 600;\n    @media (max-width: 500px) {\n      font-size: 20px;\n    }\n  }\n  > p:last-child {\n    font-size: 14px;\n    font-weight: 400;\n    @media (max-width: 500px) {\n      font-size: 12px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport React, { useMemo, useState } from \"react\";\nimport { CATEGORY } from \"../../constants\";\nimport PostItem from \"./PostItem\";\n\nexport interface IFrontmatter {\n  category: string;\n  emoji: string;\n  title: string;\n  summary: string;\n  date: string;\n  html: string;\n}\n\ntype Data = {\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        fields: { slug: string };\n        frontmatter: IFrontmatter;\n      };\n    };\n  };\n};\n\nexport default function List() {\n  const [selectedItem, setSelectedItem] = useState(\"all\");\n  const selectCategory = e => setSelectedItem(e.target.value);\n  const data = useStaticQuery<Data>(graphql`\n    query postsQuery {\n      allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              category\n              date(formatString: \"YYYYÎÖÑ MMÏõî DDÏùº\")\n              emoji\n              title\n              summary\n            }\n          }\n        }\n      }\n    }\n  `);\n  const postList = useMemo(\n    () =>\n      selectedItem === \"all\"\n        ? data?.allMarkdownRemark.edges\n        : data?.allMarkdownRemark.edges.filter(\n            el => el.node.frontmatter.category === selectedItem,\n          ),\n    [data, selectedItem],\n  );\n\n  return (\n    <Base>\n      <Category>\n        {CATEGORY.map(item => (\n          <button\n            key={item}\n            value={item}\n            onClick={e => selectCategory(e)}\n            className={selectedItem === item ? \"selected\" : \"\"}\n          >\n            {item}\n          </button>\n        ))}\n      </Category>\n      {postList.length ? (\n        <>\n          {postList.map(\n            ({\n              node: {\n                fields: { slug },\n                frontmatter: { title, summary, date },\n              },\n            }) => (\n              <PostItem\n                key={title}\n                title={title}\n                summary={summary}\n                date={date}\n                link={slug}\n              />\n            ),\n          )}\n        </>\n      ) : (\n        <p> {selectedItem} Ïóê Ìï¥ÎãπÌïòÎäî Í∏ÄÏù¥ ÏóÜÏäµÎãàÎã§.</p>\n      )}\n    </Base>\n  );\n}\n\nconst Base = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 500px;\n  margin-top: 80px;\n  > p {\n    margin-top: 30px;\n  }\n`;\n\nconst Category = styled.div`\n  display: flex;\n  gap: 20px;\n  width: 100%;\n  button {\n    font-size: 18px;\n    font-weight: 400;\n    &.selected {\n      font-weight: 600;\n      text-decoration: underline;\n      text-underline-position: under;\n    }\n  }\n`;\n","import React from \"react\";\nimport Intro from \"../components/index/Intro\";\nimport List from \"../components/index/List\";\nimport Layout from \"../components/Layout\";\n\nexport default function index() {\n  return (\n    <Layout>\n      <Intro />\n      <List />\n    </Layout>\n  );\n}\n"],"names":["Intro","___EmotionJSX","Base","CATEGORY","PostItem","title","summary","date","link","to","_styled","Link","List","useState","selectedItem","setSelectedItem","data","useStaticQuery","postList","useMemo","allMarkdownRemark","edges","filter","el","node","frontmatter","category","Category","map","item","key","value","onClick","e","target","selectCategory","className","length","slug","fields","index","Layout"],"sourceRoot":""}